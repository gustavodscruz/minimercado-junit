
package controle;

import conexao.Conexao;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
public class Funcionario extends javax.swing.JInternalFrame {

Conexao con_cliente;

    public Funcionario() {
        initComponents();
        con_cliente = new Conexao();// inicialização do objeto
        con_cliente.conecta();  // chama o método que conecta
        con_cliente.executaSQL("select * from funcionario order by Cod_Fun");
        preencherTabela();
        posicionarRegistro();
        Tabela.setAutoCreateRowSorter(true);// ativa a classificação ordenada da tabela
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        Cod_Fun = new javax.swing.JLabel();
        Nome = new javax.swing.JLabel();
        CPF = new javax.swing.JLabel();
        RG = new javax.swing.JLabel();
        CTPS = new javax.swing.JLabel();
        Comp_Res = new javax.swing.JLabel();
        Cod_Tipo = new javax.swing.JLabel();
        cod_fun = new javax.swing.JTextField();
        nome = new javax.swing.JTextField();
        cpf = new javax.swing.JTextField();
        rg = new javax.swing.JTextField();
        ctps = new javax.swing.JTextField();
        comp_res = new javax.swing.JTextField();
        cod_tipo = new javax.swing.JTextField();
        Primeiro = new javax.swing.JButton();
        Anterior = new javax.swing.JButton();
        Proximo = new javax.swing.JButton();
        Ultimo = new javax.swing.JButton();
        Novo = new javax.swing.JButton();
        Gravar = new javax.swing.JButton();
        Alterar = new javax.swing.JButton();
        Excluir = new javax.swing.JButton();
        Voltar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabela = new javax.swing.JTable();
        Pesq = new javax.swing.JLabel();
        Pesquisar = new javax.swing.JTextField();

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));

        Cod_Fun.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Cod_Fun.setText("Código Funcionário:");

        Nome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Nome.setText("Nome:");

        CPF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CPF.setText("CPF:");

        RG.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        RG.setText("RG:");

        CTPS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CTPS.setText("CTPS");

        Comp_Res.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Comp_Res.setText("Comprovante de Residência:");

        Cod_Tipo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Cod_Tipo.setText("Código Tipo:");

        cod_fun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cod_funActionPerformed(evt);
            }
        });

        nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeActionPerformed(evt);
            }
        });

        cpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpfActionPerformed(evt);
            }
        });

        rg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rgActionPerformed(evt);
            }
        });

        ctps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ctpsActionPerformed(evt);
            }
        });

        comp_res.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_resActionPerformed(evt);
            }
        });

        cod_tipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cod_tipoActionPerformed(evt);
            }
        });

        Primeiro.setText("Primeiro");
        Primeiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrimeiroActionPerformed(evt);
            }
        });

        Anterior.setText("Anterior");
        Anterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnteriorActionPerformed(evt);
            }
        });

        Proximo.setText("Proximo");
        Proximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProximoActionPerformed(evt);
            }
        });

        Ultimo.setText("Ultimo");
        Ultimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UltimoActionPerformed(evt);
            }
        });

        Novo.setText("Novo Registro");
        Novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NovoActionPerformed(evt);
            }
        });

        Gravar.setText("Gravar");
        Gravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GravarActionPerformed(evt);
            }
        });

        Alterar.setText("Alterar");
        Alterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AlterarActionPerformed(evt);
            }
        });

        Excluir.setText("Excluir");
        Excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcluirActionPerformed(evt);
            }
        });

        Voltar.setText("Voltar");
        Voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VoltarActionPerformed(evt);
            }
        });

        Tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Código Funcionário", "Nome", "CPF", "RG", "CTPS", "Comprovante de Residência", "Código Tipo"
            }
        ));
        Tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelaMouseClicked(evt);
            }
        });
        Tabela.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TabelaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(Tabela);

        Pesq.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Pesq.setText("Pesquisar por nome do funcionário:");

        Pesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PesquisarKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Comp_Res)
                                    .addComponent(Nome)
                                    .addComponent(CPF)
                                    .addComponent(RG)
                                    .addComponent(CTPS)
                                    .addComponent(Cod_Tipo))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cod_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ctps, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rg, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cpf, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cod_fun, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comp_res, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(Primeiro)
                                .addGap(18, 18, 18)
                                .addComponent(Anterior)
                                .addGap(18, 18, 18)
                                .addComponent(Proximo)
                                .addGap(18, 18, 18)
                                .addComponent(Ultimo)
                                .addGap(18, 18, 18)
                                .addComponent(Novo)
                                .addGap(18, 18, 18)
                                .addComponent(Gravar)
                                .addGap(18, 18, 18)
                                .addComponent(Alterar)
                                .addGap(18, 18, 18)
                                .addComponent(Excluir)
                                .addGap(18, 18, 18)
                                .addComponent(Voltar))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(Pesq)
                                .addGap(18, 18, 18)
                                .addComponent(Pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 568, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(Cod_Fun)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cod_Fun, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cod_fun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Nome, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CPF, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RG, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CTPS, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ctps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Comp_Res, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comp_res, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cod_Tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cod_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Primeiro)
                    .addComponent(Anterior)
                    .addComponent(Proximo)
                    .addComponent(Ultimo)
                    .addComponent(Novo)
                    .addComponent(Gravar)
                    .addComponent(Alterar)
                    .addComponent(Excluir)
                    .addComponent(Voltar))
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Pesq, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cod_funActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cod_funActionPerformed

    }//GEN-LAST:event_cod_funActionPerformed

    private void nomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeActionPerformed

    }//GEN-LAST:event_nomeActionPerformed

    private void cpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpfActionPerformed

    }//GEN-LAST:event_cpfActionPerformed

    private void rgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rgActionPerformed

    }//GEN-LAST:event_rgActionPerformed

    private void ctpsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ctpsActionPerformed

    }//GEN-LAST:event_ctpsActionPerformed

    private void comp_resActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_resActionPerformed

    }//GEN-LAST:event_comp_resActionPerformed

    private void cod_tipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cod_tipoActionPerformed

    }//GEN-LAST:event_cod_tipoActionPerformed

    private void PrimeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrimeiroActionPerformed
        try{
            con_cliente.resultset.first();
            mostrar_Dados();
        }catch (SQLException erro){
            JOptionPane.showMessageDialog(null,"Não foi possivel posicionar no primeiro registro: "+erro,"Mensagem do Programa",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_PrimeiroActionPerformed

    private void AnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnteriorActionPerformed
        try{
            con_cliente.resultset.previous();
            mostrar_Dados();
        }catch (SQLException erro){
            JOptionPane.showMessageDialog(null,"Não foi possivel posicionar no registro anterior: "+erro,"Mensagem do Programa",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_AnteriorActionPerformed

    private void ProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProximoActionPerformed
        try{
            con_cliente.resultset.next();
            mostrar_Dados();
        }catch (SQLException erro){
            JOptionPane.showMessageDialog(null,"Não foi possivel posicionar no proximo registro: "+erro,"Mensagem do Programa",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_ProximoActionPerformed

    private void UltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UltimoActionPerformed
        try{
            con_cliente.resultset.last();
            mostrar_Dados();
        }catch (SQLException erro){
            JOptionPane.showMessageDialog(null,"Não foi possivel posicionar o ultimo registro: "+erro,"Mensagem do Programa",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_UltimoActionPerformed

    private void NovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NovoActionPerformed
        cod_fun.setText("");
        nome.setText("");
        cpf.setText("");
        rg.setText("");
        ctps.setText("");
        comp_res.setText("");
        cod_tipo.setText("");
        cod_fun.requestFocus();
    }//GEN-LAST:event_NovoActionPerformed

    private void GravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GravarActionPerformed
        String COD_FUN = cod_fun.getText();
        String NOME = nome.getText();
        String CPF = cpf.getText();
        String RG = rg.getText();
        String CTPS = ctps.getText();
        String COMP_RES = comp_res.getText();
        String COD_TIPO = cod_tipo.getText();

        try {
            String insert_sql="insert into funcionario (Cod_Fun, Nome, CPF, RG, CTPS, Comp_Res, Cod_Tipo) values ('" + COD_FUN + "', '" + NOME + "', '" + CPF + "', '" + RG + "', '" + CTPS + "', '" + COMP_RES + "', '" + COD_TIPO + "')";
            con_cliente.statement.executeUpdate(insert_sql);
            JOptionPane.showMessageDialog(null,"Gravação realizada com sucesso!! ","Mensagem do Programa",JOptionPane.INFORMATION_MESSAGE);

            con_cliente.executaSQL("select * from funcionario order by Cod_Fun");
            preencherTabela();

        }catch (SQLException errosql){
            JOptionPane.showMessageDialog(null,"\n Erro na gravação:\n "+errosql,"Mensagem do Programa",JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_GravarActionPerformed

    private void AlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AlterarActionPerformed
        String COD_FUN = cod_fun.getText();
        String NOME = nome.getText();
        String CPF = cpf.getText();
        String RG = rg.getText();
        String CTPS = ctps.getText();
        String COMP_RES = comp_res.getText();
        String COD_TIPO = cod_tipo.getText();
        String sql;
        String msg = "";

        try {
            if (cod_fun.getText().equals("")) {
                sql = "insert into funcionario (Cod_Fun, Nome, CPF, RG, CTPS, Comp_Res, Cod_Tipo) values ('" + COD_FUN + "', '" + NOME + "', '" + CPF + "', '" + RG + "', '" + CTPS + "', '" + COMP_RES + "', '" + COD_TIPO + "')";
                msg = "Alteração de Registro";
            } else {
                sql = "update funcionario set Nome='" + NOME + "',CPF='" + CPF + "', RG='" + RG + "', CTPS='" + CTPS + "', Comp_Res='" + COMP_RES + "', Cod_Tipo='" + COD_TIPO + "' where Cod_Fun= " + cod_fun.getText();
                msg = "Alteração de Registro";
            }

            con_cliente.statement.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, "Gravação realizada com sucesso!! ", "Mensagem do Programa", JOptionPane.INFORMATION_MESSAGE);

            con_cliente.executaSQL("select * from funcionario order by Cod_Fun");
            preencherTabela();

        } catch (SQLException errosql) {
            JOptionPane.showMessageDialog(null, "\n Erro na gravação:\n " + errosql, "Mensagem do Programa", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_AlterarActionPerformed

    private void ExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcluirActionPerformed
        String sql="";
        try{
            int resposta = JOptionPane.showConfirmDialog(rootPane, "Deseja Excluir o registro: ","Confirmar Exclusão", JOptionPane.YES_NO_OPTION,3);
            if (resposta==0){
                sql = "delete from funcionario where Cod_Fun = " + cod_fun.getText();
                int excluir = con_cliente.statement.executeUpdate(sql);
                if(excluir==1){
                    JOptionPane.showMessageDialog(null, "Exclusão relizada com sucesso!! ","Mensagem do Programa",JOptionPane.INFORMATION_MESSAGE);
                    con_cliente.executaSQL("select * from funcionario order by Cod_Fun");
                    con_cliente.resultset.first();
                    preencherTabela();
                    posicionarRegistro();
                }else{
                    JOptionPane.showMessageDialog(null, "Operação cancelada pelo usuário!! ","Mensagem do Programa",JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }catch (SQLException excecao){
            JOptionPane.showMessageDialog(null,"Erro na exclusão: "+excecao,"Mensagem do Programa",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_ExcluirActionPerformed

    private void VoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VoltarActionPerformed
        dispose();
    }//GEN-LAST:event_VoltarActionPerformed

    private void TabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaMouseClicked
        int linha_selecionada = Tabela.getSelectedRow();
        cod_fun.setText(Tabela.getValueAt(linha_selecionada, 0).toString());
        nome.setText(Tabela.getValueAt(linha_selecionada, 1).toString());
        cpf.setText(Tabela.getValueAt(linha_selecionada, 2).toString());
        rg.setText(Tabela.getValueAt(linha_selecionada, 3).toString());
        ctps.setText(Tabela.getValueAt(linha_selecionada, 4).toString());
        comp_res.setText(Tabela.getValueAt(linha_selecionada, 5).toString());
        cod_tipo.setText(Tabela.getValueAt(linha_selecionada, 6).toString());
    }//GEN-LAST:event_TabelaMouseClicked

    private void TabelaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TabelaKeyPressed
        int linha_selecionada = Tabela.getSelectedRow();
        cod_fun.setText(Tabela.getValueAt(linha_selecionada, 0).toString());
        nome.setText(Tabela.getValueAt(linha_selecionada, 1).toString());
        cpf.setText(Tabela.getValueAt(linha_selecionada, 2).toString());
        rg.setText(Tabela.getValueAt(linha_selecionada, 3).toString());
        ctps.setText(Tabela.getValueAt(linha_selecionada, 4).toString());
        comp_res.setText(Tabela.getValueAt(linha_selecionada, 5).toString());
        cod_tipo.setText(Tabela.getValueAt(linha_selecionada, 6).toString());
    }//GEN-LAST:event_TabelaKeyPressed

    private void PesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PesquisarKeyReleased
        try{
            String pesquisa = "select * from funcionario where nome like '" + Pesquisar.getText() + "%'";
            con_cliente.executaSQL(pesquisa);

            if(con_cliente.resultset.first()){
                preencherTabela();
            }else{
                JOptionPane.showMessageDialog(null, "\n Não existe dados com este parametro!! ","Mensagem do Programa",JOptionPane.INFORMATION_MESSAGE);
            }
        }catch (SQLException errosql){
            JOptionPane.showMessageDialog(null,"\n Dados digitados não foram localizados:\n "+errosql,"Mensagem do Programa",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_PesquisarKeyReleased

    public void posicionarRegistro(){
         try{
             con_cliente.resultset.first();
             mostrar_Dados();
         }catch (SQLException erro){
            JOptionPane.showMessageDialog(null,"Não foi possivel posicionar no primeiro registro: "+erro,"Mensagem do Programa",JOptionPane.INFORMATION_MESSAGE);
        }
     }
     public void  mostrar_Dados(){
             try{
                 cod_fun.setText(con_cliente.resultset.getString("cod_fun"));
                 nome.setText(con_cliente.resultset.getString("nome"));
                 cpf.setText(con_cliente.resultset.getString("cpf"));
                 rg.setText(con_cliente.resultset.getString("rg"));
                 ctps.setText(con_cliente.resultset.getString("ctps"));
                 comp_res.setText(con_cliente.resultset.getString("comp_res"));
                 cod_tipo.setText(con_cliente.resultset.getString("cod_tipo"));
                 
             }catch (SQLException erro){
            JOptionPane.showMessageDialog(null,"Não localizou dados: "+erro,"Mensagem do Programa",JOptionPane.INFORMATION_MESSAGE);
            }
        }
    
    
    
    public void preencherTabela(){
        Tabela.getColumnModel().getColumn(0).setPreferredWidth(4);
        Tabela.getColumnModel().getColumn(1).setPreferredWidth(150);
        Tabela.getColumnModel().getColumn(2).setPreferredWidth(11);
        Tabela.getColumnModel().getColumn(3).setPreferredWidth(7);
        Tabela.getColumnModel().getColumn(4).setPreferredWidth(11);
        Tabela.getColumnModel().getColumn(5).setPreferredWidth(150);
        Tabela.getColumnModel().getColumn(6).setPreferredWidth(4);
        
        DefaultTableModel modelo =(DefaultTableModel) Tabela.getModel();
        modelo.setNumRows(0);
        
         try{
            con_cliente.resultset.beforeFirst();
            while(con_cliente.resultset.next()){
                modelo.addRow(new Object[]{
                    con_cliente.resultset.getString("cod_fun"),
                    con_cliente.resultset.getString("nome"),
                    con_cliente.resultset.getString("cpf"),
                    con_cliente.resultset.getString("rg"), 
                    con_cliente.resultset.getString("ctps"), 
                    con_cliente.resultset.getString("comp_res"), 
                    con_cliente.resultset.getString("cod_tipo")
                });
            }
        }catch (SQLException erro){
            JOptionPane.showMessageDialog(null,"\n Erro ao listar dados da tabela!! :\n "+erro,"Mensagem do Programa",JOptionPane.INFORMATION_MESSAGE);
                }
    }

    
    
     public void AlterarActionPerformed2(java.awt.event.ActionEvent evt) {                                        
        String COD_FUN = cod_fun.getText();
        String NOME = nome.getText();
        String CPF = cpf.getText();
        String RG = rg.getText();
        String CTPS = ctps.getText();
        String COMP_RES = comp_res.getText();
        String COD_TIPO = cod_tipo.getText();
        String sql;
        String msg="";

        try{
            if(cod_fun.getText().equals("")){
                sql="insert into funcionario (Cod_Fun, Nome, CPF, RG, CTPS, Comp_Res, Cod_Tipo) values ('" + COD_FUN + "', '" + NOME + "', '" + CPF + "', '" + RG + "', '" + CTPS + "', '" + COMP_RES + "', '" + COD_TIPO + "')";
                msg="Alteração de Registro";
            }else{
                sql="update funcionario set Nome='" + NOME + "',CPF='" + CPF + "', RG='" + RG + "', CTPS='" + CTPS + "', Comp_Res='" + COMP_RES + "', Cod_Tipo='" + COD_TIPO + "' where Cod_Fun= " + cod_fun.getText();
                msg="Alteração de Registro";
            }

            con_cliente.statement.executeUpdate(sql);
            JOptionPane.showMessageDialog(null,"Gravação realizada com sucesso!! ","Mensagem do Programa",JOptionPane.INFORMATION_MESSAGE);

            con_cliente.executaSQL("select * from funcionario order by Cod_Fun");
            preencherTabela();

        }catch (SQLException errosql){
            JOptionPane.showMessageDialog(null,"\n Erro na gravação:\n "+errosql,"Mensagem do Programa",JOptionPane.INFORMATION_MESSAGE);
        }
    }  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Alterar;
    private javax.swing.JButton Anterior;
    private javax.swing.JLabel CPF;
    private javax.swing.JLabel CTPS;
    private javax.swing.JLabel Cod_Fun;
    private javax.swing.JLabel Cod_Tipo;
    private javax.swing.JLabel Comp_Res;
    private javax.swing.JButton Excluir;
    private javax.swing.JButton Gravar;
    private javax.swing.JLabel Nome;
    private javax.swing.JButton Novo;
    private javax.swing.JLabel Pesq;
    private javax.swing.JTextField Pesquisar;
    private javax.swing.JButton Primeiro;
    private javax.swing.JButton Proximo;
    private javax.swing.JLabel RG;
    private javax.swing.JTable Tabela;
    private javax.swing.JButton Ultimo;
    private javax.swing.JButton Voltar;
    public javax.swing.JTextField cod_fun;
    public javax.swing.JTextField cod_tipo;
    public javax.swing.JTextField comp_res;
    public javax.swing.JTextField cpf;
    public javax.swing.JTextField ctps;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextField nome;
    public javax.swing.JTextField rg;
    // End of variables declaration//GEN-END:variables
}
